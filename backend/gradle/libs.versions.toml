[versions]
spring-boot = "3.4.0"
spring-dep-mgmt = "1.1.6"
kotlin = "2.1.0"
graalvm-native = "0.10.4"
ktlint = "13.0.0"
foojay = "0.8.0"

spring-cloud = "2024.0.0"
testcontainers-bom = "1.20.4"

jackson = "2.17.2"
coroutines = "1.8.1"
postgres = "42.7.4"
flyway = "10.17.2"
lettuce = "6.3.2.RELEASE"
h2 = "2.2.224"
mockk = "1.13.13"
springmockk = "4.0.2"
archunit = "1.3.0"

[libraries]
# Spring Boot starters (managed by Spring BOM)
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web" }
spring-boot-starter = { module = "org.springframework.boot:spring-boot-starter" }
spring-boot-starter-cache = { module = "org.springframework.boot:spring-boot-starter-cache" }
spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
spring-boot-starter-data-redis = { module = "org.springframework.boot:spring-boot-starter-data-redis" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation" }
spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator" }
spring-boot-starter-logging = { module = "org.springframework.boot:spring-boot-starter-logging" }
spring-boot-devtools = { module = "org.springframework.boot:spring-boot-devtools" }
spring-boot-config-processor = { module = "org.springframework.boot:spring-boot-configuration-processor" }

# Spring WebClient without reactive web server
spring-webflux = { module = "org.springframework:spring-webflux" }
reactor-netty-http = { module = "io.projectreactor.netty:reactor-netty-http" }

# Jackson
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }

# Kotlin
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor", version.ref = "coroutines" }

# Database
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgres" }
flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }
flyway-database-postgresql = { module = "org.flywaydb:flyway-database-postgresql", version.ref = "flyway" }

# Redis
lettuce-core = { module = "io.lettuce:lettuce-core", version.ref = "lettuce" }

# Testing
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test" }
testcontainers-bom = { module = "org.testcontainers:testcontainers-bom", version.ref = "testcontainers-bom" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql" }
testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
springmockk = { module = "com.ninja-squad:springmockk", version.ref = "springmockk" }
h2 = { module = "com.h2database:h2", version.ref = "h2" }
archunit-junit5 = { module = "com.tngtech.archunit:archunit-junit5", version.ref = "archunit" }

# BOMs
spring-cloud-dependencies = { module = "org.springframework.cloud:spring-cloud-dependencies", version.ref = "spring-cloud" }

[bundles]
spring-starters = [
  "spring-boot-starter",
  "spring-boot-starter-web",
  "spring-boot-starter-data-jpa",
  "spring-boot-starter-data-redis",
  "spring-boot-starter-validation",
  "spring-boot-starter-actuator",
  "spring-boot-starter-cache",
  "spring-boot-starter-logging"
]
jackson = [
  "jackson-module-kotlin",
  "jackson-datatype-jsr310"
]
kotlin = [
  "kotlin-reflect",
  "kotlin-stdlib",
  "kotlinx-coroutines-core",
  "kotlinx-coroutines-reactor"
]
http-client = [
  "spring-webflux",
  "reactor-netty-http"
]
db = [
  "flyway-core",
  "flyway-database-postgresql"
]
redis = [
  "lettuce-core"
]
test = [
  "spring-boot-starter-test",
  "testcontainers-postgresql",
  "testcontainers-junit-jupiter",
  "kotlinx-coroutines-test",
  "mockk",
  "springmockk"
]

[plugins]
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "spring-dep-mgmt" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-plugin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlin-plugin-jpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }
kotlin-plugin-allopen = { id = "org.jetbrains.kotlin.plugin.allopen", version.ref = "kotlin" }
kotlin-plugin-noarg = { id = "org.jetbrains.kotlin.plugin.noarg", version.ref = "kotlin" }
graalvm-native = { id = "org.graalvm.buildtools.native", version.ref = "graalvm-native" }
spring-boot-aot = { id = "org.springframework.boot.aot", version.ref = "spring-boot" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }
foojay-resolver-convention = { id = "org.gradle.toolchains.foojay-resolver-convention", version.ref = "foojay" }
detekt = { id = "io.gitlab.arturbosch.detekt", version = "1.23.6" }


